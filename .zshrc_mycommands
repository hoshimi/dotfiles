# global aliases
alias -g L='| less'
alias -g G='| grep'
if [ "$(uname)" = 'Darwin' ]; then
    alias ls='ls -aFG'
    alias ll='ls -alhG'
else
    alias ls='ls -aF --color=always'
    alias ll='ls -alh --color=always'
fi
alias pd="popd"
alias ps2pdf='ps2pdf -dEPSCrop -dAutoFilterColorImages=false -dColorImageFilter=/FlateEncode'
alias gst='git status'
alias ..="cd .."
alias :q="exit"
alias gpp="g++ -o"
alias less="less -R"
alias lv="lv -c"
alias diff="diff -y --suppress-common-lines"
alias grep="grep -n --color=auto"
alias mv="mv -v"
alias gst="git status"

# fuzzy history search
__fzycmd() {
    echo "fzy"
}

fzy-history-widget() {
    local selected
    selected=( $(history 1 | perl -ne 'BEGIN { my @lines = (); } s/^\s*\d+\s*//; $in=$_; if (!(grep {$in eq $_} @lines)) { push(@lines, $in); print $in; }' | $(__fzycmd) -l 25 -q "${LBUFFER}") )
    if [ -n "$selected" ]; then
        BUFFER=${selected}
        CURSOR=${#BUFFER}
    fi
    zle redisplay
}

zle -N fzy-history-widget
bindkey '^R' fzy-history-widget

# auto ls
chpwd() {
    ls_abbrev
}
ls_abbrev() {
    # -a : Do not ignore entries starting with ..
    # -C : Force multi-column output.
    # -F : Append indicator (one of */=>@|) to entries.
    local cmd_ls='ls'
    local -a opt_ls
    opt_ls=('-aCF' '--color=always')
    case "${OSTYPE}" in
        freebsd*|darwin*)
            if type gls > /dev/null 2>&1; then
                cmd_ls='gls'
            else
                # -G : Enable colorized output.
                opt_ls=('-aCFG')
            fi
            ;;
    esac

    local ls_result
    ls_result=$(CLICOLOR_FORCE=1 COLUMNS=$COLUMNS command $cmd_ls ${opt_ls[@]} | sed $'/^\e\[[0-9;]*m$/d')

    local ls_lines=$(echo "$ls_result" | wc -l | tr -d ' ')

    if [ $ls_lines -gt 10 ]; then
        echo "$ls_result" | head -n 5
        echo '...'
        echo "$ls_result" | tail -n 5
        echo "$(command ls -1 -A | wc -l | tr -d ' ') files exist"
    else
        echo "$ls_result"
    fi
}
